<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sftp:config name="SFTP_Connection" doc:name="SFTP Config" doc:id="e6e7a786-6ee9-4b2c-8a16-c81b1fadd55a" >
		<sftp:connection host="localhost" username="gabo" password="@Inercia" />
	</sftp:config>
	<db:config name="PostgreSQL_Config" doc:name="Database Config" doc:id="506501e4-827a-4686-b450-54745f14f2ab" >
		<db:generic-connection url="jdbc:postgresql://localhost:5432/mule_test" driverClassName="org.postgresql.Driver" user="postgres" password="Hola1234" />
	</db:config>
	<flow name="telasis-sftp-analyzer-sbxFlow" doc:id="ee3cb193-3613-48db-823f-1851f59ba939" >
		<scheduler doc:name="Scheduler" doc:id="2500b995-b155-467b-9bfc-8021be9db237" >
			<scheduling-strategy >
				<fixed-frequency frequency="15" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<sftp:list doc:name="List" doc:id="4c78706f-534f-4160-8246-b55381d2b281" config-ref="SFTP_Connection" directoryPath="/Users/gabo/sftp_archivos/entrada"/>
		<logger level="INFO" doc:name="Logger" doc:id="16ccfadb-c433-4873-bcb3-c9b5cda3813d" message='#[payload]' />
		<foreach doc:name="For Each" doc:id="74e69e4e-b221-4c02-9e45-2f4ab31a644b" >
			<set-variable value='#[(payload splitBy "/")[-1]]' doc:name="Set Variable" doc:id="9c046c9a-caf5-4fbe-a44a-ccf7eb19b3c8" variableName="fileName"/>
			<set-variable value='#[%dw 2.0&#10;output application/java&#10;---&#10;if (vars.fileName endsWith ".csv") "csv"&#10;else if (vars.fileName endsWith ".txt") "txt"&#10;else "unknown"]' doc:name="Set Variable" doc:id="3233038d-5eaa-4a28-8789-357dae1c9f36" variableName="fileType"/>
			<sftp:read doc:name="Read" doc:id="2da39e35-e569-4d66-82e3-e55e4ba6f127" config-ref="SFTP_Connection" path="#[payload]"/>
			<logger level="INFO" doc:name="Logger" doc:id="f3a8ad2a-3566-4cd3-b728-cc3ce1d87572" message="#[vars.fileType]"/>
			<choice doc:name="Choice" doc:id="7e10ccef-0b36-4128-b692-aefd15881168" >
				<when expression='vars.fileType == "csv"'>
					<flow-ref doc:name="Flow Reference" doc:id="435ae2ca-c563-4449-ba3e-9b26f871e4d8" name="insertarCSV"/>
				</when>
				<when expression='vars.fileType == "txt"'>
					<flow-ref doc:name="Flow Reference" doc:id="ebec26e9-bee6-478b-94ac-9b290690c8b4" name="insertarTXT"/>
				</when>
				<otherwise >
					<logger level="INFO" doc:name="Logger" doc:id="f2b0f2ce-558b-4e5f-b689-89f6ef6d7273" message="No se pudo leer"/>
				</otherwise>
			</choice>
		</foreach>
	</flow>
	<flow name="insertarCSV" doc:id="decf0ed0-298f-414a-b498-1795d5597514" >
		<ee:transform doc:name="Transform Message" doc:id="6947f504-d0c4-4ddb-a7e9-c76b316a8e6d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java

fun clean(v) = if (v == null or trim(v) == "") null else v
fun isNumeric(val) = !isEmpty(val)

---
payload map (row) -> {
  reserva: clean(row.Reserva),
  contract_id: clean(row.ContractID),
  first_name: clean(row.FirstName),
  last_name: clean(row.LastName),
  home_phone: clean(row.HomePhone),
  fecha_nacimiento: clean(row.Fecha_de_nacimiento),
  correo_electronico: clean(row.Correo_electronico),
  booking_date: clean(row.BookingDate),
  departure_date: clean(row.DepartureDate),
  return_date: clean(row.ReturnDate),
  amount_pasajero: if (isNumeric(row.AmountPasajero)) row.AmountPasajero as Number else null,
  amount_booking: if (isNumeric(row.AmountBooking)) row.AmountBooking as Number else null,
  currency_code: clean(row.CurrencyCode),
  exchange_rate: if (isNumeric(row.ExchangeRate)) row.ExchangeRate as Number else null,
  origin: clean(row.Origin),
  destination: clean(row.Destination),
  ssr_code: clean(row.SSR_Code),
  tua: if (isNumeric(row.TUA)) row.TUA as Number else null,
  valor_seguro: if (isNumeric(row.ValorSeguro)) row.ValorSeguro as Number else null,
  created_location_code: clean(row.CreatedLocationCode),
  created_department: clean(row.CreatedDepartment)
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:bulk-insert doc:name="Bulk Insert CSV&#10;" doc:id="a93699e9-b569-498a-a782-b4cc9ddc88af" config-ref="PostgreSQL_Config">
			<db:sql ><![CDATA[INSERT INTO clientes_csv (
  reserva, contract_id, first_name, last_name, home_phone, fecha_nacimiento, correo_electronico,
  booking_date, departure_date, return_date, amount_pasajero, amount_booking, currency_code,
  exchange_rate, origin, destination, ssr_code, tua, valor_seguro, created_location_code, created_department
)
VALUES (
  :reserva, :contract_id, :first_name, :last_name, :home_phone, :fecha_nacimiento, :correo_electronico,
  :booking_date, :departure_date, :return_date, :amount_pasajero, :amount_booking, :currency_code,
  :exchange_rate, :origin, :destination, :ssr_code, :tua, :valor_seguro, :created_location_code, :created_department
)
]]></db:sql>
		</db:bulk-insert>
		<logger level="INFO" doc:name="Logger" doc:id="8580375c-23ce-4414-8f68-0837fc00e26d" message="CSV insertado correctamente: #[payload]"/>
	</flow>
	<flow name="insertarTXT" doc:id="62a4c617-9bd5-4705-9c28-7c101757f214" >
		<ee:transform doc:name="Transform Message" doc:id="9eb10f92-1153-4496-b981-d987cefe06d3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
var cleanedLines = (payload as String) splitBy "\n"
    filter (line) -> line != null and line != "" and (line contains "|")
---
cleanedLines map (line) -> do {
    var fields = line splitBy "|"
    ---
    {
        idUnico: fields[0] default null,
        folio: fields[1] default null,
        nombreCliente: fields[2] default null,
        casa: fields[3] default null,
        oficina: fields[4] default null,
        movil: fields[5] default null,
        entidad: fields[6] default null,
        ciudad: fields[7] default null,
        municipio: fields[8] default null,
        cp: fields[9] default null,
        domicilio: fields[10] default null,
        ultDig: fields[11] default null,
        email: fields[12] default null,
        fechaCorte: fields[13] default null,
        product: fields[14] default null,
        flag: fields[15] default null,
        cuentaNueva: fields[16] default null,
        antiguedad: fields[17] default null,
        accountId: fields[18] default null
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:bulk-insert doc:name="Bulk insert TXT" doc:id="3307e063-0ed7-4a48-ac30-497c1cf30707" config-ref="PostgreSQL_Config">
			<db:sql ><![CDATA[INSERT INTO clientes_txt (
  id_unico, folio, nombre_cliente, casa, oficina, movil, entidad, ciudad, municipio, cp,
  domicilio, ult_dig, email, f_corte, product, flag, cuenta_nueva, antiguedad, account_id
) VALUES (
  :idUnico, :folio, :nombreCliente, :casa, :oficina, :movil, :entidad, :ciudad, :municipio, :cp,
  :domicilio, :ultDig, :email, :fechaCorte, :product, :flag, :cuentaNueva, :antiguedad, :accountId
)
]]></db:sql>
		</db:bulk-insert>
		<logger level="INFO" doc:name="Logger" doc:id="7a9f5c5a-675b-44c6-97e1-65dcf2d3afd3" message="CSV insertado correctamente: #[payload]" />
	</flow>
</mule>
